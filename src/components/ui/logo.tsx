import { useId } from "react";
import { cn } from "@/lib/utils";

export function Logomark({
  className,
  invert = false,
  filled = false,
  fillOnHover = false,
  ...props
}: React.ComponentPropsWithoutRef<"svg"> & {
  className?: string;
  invert?: boolean;
  filled?: boolean;
  fillOnHover?: boolean;
}) {
  let id = useId();

  return (
    <svg
      width="43"
      height="40"
      viewBox="0 0 1024 809"
      {...props}
      className={cn(fillOnHover && "group/logo", className)}
    >
      <rect
        width="1024"
        height="809"
        clipPath={`url(#${id}-clip)`}
        className={cn(
          "fill-[#BA3030] transition-all duration-500",
          filled ? "h-[809px] w-[1024px]" : "w-0 group-hover/logo:w-[1024px]",
        )}
      />
      <use href={`#${id}-path`} fill="none" strokeWidth="1.5" />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M517.768 812.264C493.703 818.905 485.087 804.823 467.463 784.948C410.209 720.384 343.867 664.175 280.723 605.635C190.975 522.431 79.333 435.373 41.694 313.35C36.64 296.963 35.768 279.561 33.242 262.597L33.269 262.452C31.179 220.807 34.942 167.399 71.381 139.472C112.841 107.696 213.089 10.225 343.804 31.572C457.976 50.217 521.821 180.492 521.307 197.596C520.135 236.579 517.768 812.264 517.768 812.264Z"
        fill="#BA3030"
        stroke="#BA3030"
        strokeWidth="11.21"
        strokeMiterlimit="1.5"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <defs>
        <path
          id={`${id}-path`}
          d="M517.238 97.2469C616.141 18.0949 696.981 -1.41214 766.495 5.39586C828.254 11.4449 880.892 36.9929 932.067 79.2059C933.706 80.5579 935.344 81.9209 936.978 83.2949C992.689 130.105 1018.04 192.146 1023 256.863C1028.63 330.21 1011.62 399.254 941.571 484.832C933.189 495.072 899.422 536.67 852.679 577.001C811.435 612.587 760.514 660.898 710.667 706.761C667.529 746.451 625.195 787.925 590.633 827.608C547.938 876.629 526.938 874.385 505.602 874.188C476.758 873.923 383.699 769.332 367.161 754.085C339.231 728.334 297.395 692.709 259.416 655.918C189.252 587.95 111.406 525.375 55.2702 446.133C7.2542 378.356 -7.1808 309.612 3.1622 236.284C8.2152 200.464 23.2802 168.162 42.0482 135.213C54.6562 113.078 86.9542 75.8359 104.836 62.8469C164.106 19.7949 228.063 -0.539141 295.327 0.0108594C366.166 0.589859 440.673 24.9909 517.238 97.2469ZM521.538 218.567C595.085 107.574 688.995 67.7119 760.216 71.9199C842.007 76.7519 905.257 126.295 929.121 171.898C952.263 216.123 960.848 274.205 953.849 320.801C944.873 380.56 905.692 438.48 845.284 493.161C838.249 499.529 796.252 541.459 762.595 570.221C732.898 595.6 695.393 629.948 659.491 662.666C628.421 690.981 594.585 723.715 569.583 751.982C540.169 785.238 512 783.903 512 783.903C512 783.903 485.87 789.242 467.185 768.747C450.822 750.8 433.343 730.625 409.729 708.644C389.788 690.083 355.179 657.711 328.069 631.198C277.986 582.218 206.791 517.522 160.279 465.693C131.525 433.652 104.916 401.799 88.4892 362.996C80.0942 343.162 74.8072 331.103 72.1932 297.324C70.2542 272.275 66.5012 250.954 81.0442 209.033C119.872 97.1039 368.635 -15.8201 521.538 218.567Z"
        />
        <clipPath id={`${id}-clip`}>
          <use href={`#${id}-path`} />
        </clipPath>
      </defs>
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        fill="#BA3030"
        d="M517.238 97.2469C616.141 18.0949 696.981 -1.41214 766.495 5.39586C828.254 11.4449 880.892 36.9929 932.067 79.2059C933.706 80.5579 935.344 81.9209 936.978 83.2949C992.689 130.105 1018.04 192.146 1023 256.863C1028.63 330.21 1011.62 399.254 941.571 484.832C933.189 495.072 899.422 536.67 852.679 577.001C811.435 612.587 760.514 660.898 710.667 706.761C667.529 746.451 625.195 787.925 590.633 827.608C547.938 876.629 526.938 874.385 505.602 874.188C476.758 873.923 383.699 769.332 367.161 754.085C339.231 728.334 297.395 692.709 259.416 655.918C189.252 587.95 111.406 525.375 55.2702 446.133C7.2542 378.356 -7.1808 309.612 3.1622 236.284C8.2152 200.464 23.2802 168.162 42.0482 135.213C54.6562 113.078 86.9542 75.8359 104.836 62.8469C164.106 19.7949 228.063 -0.539141 295.327 0.0108594C366.166 0.589859 440.673 24.9909 517.238 97.2469ZM521.538 218.567C595.085 107.574 688.995 67.7119 760.216 71.9199C842.007 76.7519 905.257 126.295 929.121 171.898C952.263 216.123 960.848 274.205 953.849 320.801C944.873 380.56 905.692 438.48 845.284 493.161C838.249 499.529 796.252 541.459 762.595 570.221C732.898 595.6 695.393 629.948 659.491 662.666C628.421 690.981 594.585 723.715 569.583 751.982C540.169 785.238 512 783.903 512 783.903C512 783.903 485.87 789.242 467.185 768.747C450.822 750.8 433.343 730.625 409.729 708.644C389.788 690.083 355.179 657.711 328.069 631.198C277.986 582.218 206.791 517.522 160.279 465.693C131.525 433.652 104.916 401.799 88.4892 362.996C80.0942 343.162 74.8072 331.103 72.1932 297.324C70.2542 272.275 66.5012 250.954 81.0442 209.033C119.872 97.1039 368.635 -15.8201 521.538 218.567Z"
      />
    </svg>
  );
}

export function LogoThin({
  className,
  invert = false,
  filled = false,
  fillOnHover = false,
  ...props
}: React.ComponentPropsWithoutRef<"svg"> & {
  invert?: boolean;
  filled?: boolean;
  fillOnHover?: boolean;
}) {
  return (
    <svg
      viewBox="0 0 182 44"
      className={cn(fillOnHover && "group/logo", className)}
      {...props}
    >
      <Logomark
        preserveAspectRatio="xMinYMid meet"
        invert={invert}
        filled={filled}
      />
      <path
        d="M13.8635 32L3.53021 21.5L12.0635 13H13.7635L5.33021 21.4L15.7635 32H13.8635ZM0.930209 32V-9.53674e-07H2.33021V32H0.930209ZM27.3281 32.4C25.8837 32.4 24.5726 32.0444 23.3948 31.3333C22.217 30.6222 21.2837 29.6333 20.5948 28.3667C19.9059 27.0778 19.5615 25.5778 19.5615 23.8667V13H20.9615V23.6333C20.9615 25.9889 21.5948 27.8222 22.8615 29.1333C24.1503 30.4222 25.7059 31.0667 27.5281 31.0667C28.8392 31.0667 30.0281 30.7556 31.0948 30.1333C32.1615 29.4889 33.017 28.6111 33.6615 27.5C34.3059 26.3667 34.6281 25.0778 34.6281 23.6333V13H36.0281V32H34.7615V27.6C34.0948 29.0889 33.0948 30.2667 31.7615 31.1333C30.4503 31.9778 28.9726 32.4 27.3281 32.4ZM51.6719 32.4C50.2941 32.4 48.9941 32.1444 47.7719 31.6333C46.5719 31.1222 45.5163 30.4111 44.6052 29.5C43.6941 28.5889 42.9719 27.5333 42.4385 26.3333C41.9274 25.1333 41.6719 23.8444 41.6719 22.4667C41.6719 21.1111 41.9274 19.8444 42.4385 18.6667C42.9719 17.4667 43.6941 16.4111 44.6052 15.5C45.5163 14.5889 46.5719 13.8778 47.7719 13.3667C48.9941 12.8556 50.2941 12.6 51.6719 12.6C53.0497 12.6 54.3385 12.8556 55.5385 13.3667C56.7608 13.8778 57.8274 14.5889 58.7385 15.5C59.6497 16.4111 60.3608 17.4667 60.8719 18.6667C61.4052 19.8444 61.6719 21.1222 61.6719 22.5C61.6719 23.8556 61.4052 25.1333 60.8719 26.3333C60.3608 27.5333 59.6497 28.5889 58.7385 29.5C57.8274 30.4111 56.7608 31.1222 55.5385 31.6333C54.3385 32.1444 53.0497 32.4 51.6719 32.4ZM51.7052 31.0667C53.283 31.0667 54.7163 30.6889 56.0052 29.9333C57.3163 29.1556 58.3497 28.1222 59.1052 26.8333C59.883 25.5222 60.2719 24.0778 60.2719 22.5C60.2719 20.9222 59.883 19.4889 59.1052 18.2C58.3497 16.8889 57.3163 15.8556 56.0052 15.1C54.7163 14.3222 53.2719 13.9333 51.6719 13.9333C50.0941 13.9333 48.6497 14.3222 47.3385 15.1C46.0274 15.8556 44.983 16.8889 44.2052 18.2C43.4497 19.4889 43.0719 20.9222 43.0719 22.5C43.0719 24.0778 43.4497 25.5222 44.2052 26.8333C44.983 28.1222 46.0274 29.1556 47.3385 29.9333C48.6497 30.6889 50.1052 31.0667 51.7052 31.0667ZM67.3052 32V13H68.5719V18.2C69.3052 16.4444 70.3941 15.1111 71.8385 14.2C73.3052 13.2889 74.9163 12.8333 76.6719 12.8333L77.0052 14.1667C76.8941 14.1444 76.783 14.1333 76.6719 14.1333C76.583 14.1333 76.483 14.1333 76.3719 14.1333C74.9941 14.1333 73.7163 14.4778 72.5385 15.1667C71.383 15.8333 70.4497 16.7778 69.7385 18C69.0497 19.2 68.7052 20.6111 68.7052 22.2333V32H67.3052ZM81.649 32V13H83.049V32H81.649ZM82.349 8.2C82.1267 8.2 81.9267 8.14444 81.749 8.03333C81.5712 7.92222 81.4267 7.77778 81.3156 7.6C81.2045 7.42222 81.149 7.22222 81.149 7C81.149 6.77778 81.2045 6.57778 81.3156 6.4C81.4267 6.22222 81.5712 6.07778 81.749 5.96667C81.9267 5.85555 82.1267 5.8 82.349 5.8C82.5712 5.8 82.7712 5.85555 82.949 5.96667C83.1267 6.07778 83.2712 6.22222 83.3823 6.4C83.4934 6.57778 83.549 6.77778 83.549 7C83.549 7.22222 83.4934 7.42222 83.3823 7.6C83.2712 7.77778 83.1267 7.92222 82.949 8.03333C82.7712 8.14444 82.5712 8.2 82.349 8.2ZM90.6875 32.2667C90.4431 32.2667 90.2097 32.2 89.9875 32.0667C89.7653 31.9556 89.5875 31.7889 89.4542 31.5667C89.3431 31.3444 89.2875 31.1111 89.2875 30.8667C89.2875 30.6 89.3431 30.3667 89.4542 30.1667C89.5875 29.9444 89.7653 29.7778 89.9875 29.6667C90.2097 29.5333 90.4431 29.4667 90.6875 29.4667C90.9542 29.4667 91.1875 29.5333 91.3875 29.6667C91.6097 29.7778 91.7764 29.9444 91.8875 30.1667C92.0208 30.3667 92.0875 30.6 92.0875 30.8667C92.0875 31.1111 92.0208 31.3444 91.8875 31.5667C91.7764 31.7889 91.6097 31.9556 91.3875 32.0667C91.1875 32.2 90.9542 32.2667 90.6875 32.2667Z"
        transform="translate(58 4)"
        className={invert ? "fill-white" : "fill-neutral-950"}
      />
    </svg>
  );
}

export function LogoExtraLight({
  className,
  invert = false,
  filled = false,
  fillOnHover = false,
  ...props
}: React.ComponentPropsWithoutRef<"svg"> & {
  invert?: boolean;
  filled?: boolean;
  fillOnHover?: boolean;
}) {
  return (
    <svg
      viewBox="0 0 182 44"
      className={cn(fillOnHover && "group/logo", className)}
      {...props}
    >
      <Logomark
        preserveAspectRatio="xMinYMid meet"
        invert={invert}
        filled={filled}
      />
      <path
        d="M13.1172 32L3.08385 21.3667L11.3505 12.7333H13.6839L5.51719 21.2333L15.6839 32H13.1172ZM0.150521 32V-9.53674e-07H2.08385V32H0.150521ZM26.9432 32.4C25.4988 32.4 24.1766 32.0444 22.9766 31.3333C21.7988 30.6222 20.8543 29.6222 20.1432 28.3333C19.4543 27.0444 19.1099 25.5222 19.1099 23.7667V12.7333H21.0432V23.4667C21.0432 25.6222 21.6432 27.3444 22.8432 28.6333C24.0432 29.9 25.5432 30.5333 27.3432 30.5333C28.5432 30.5333 29.6432 30.2444 30.6432 29.6667C31.6655 29.0667 32.4766 28.2444 33.0766 27.2C33.6988 26.1333 34.0099 24.9 34.0099 23.5V12.7333H35.9432V32H34.1766V27.9C33.4877 29.3 32.4988 30.4 31.2099 31.2C29.9432 32 28.521 32.4 26.9432 32.4ZM51.5609 32.4C50.1609 32.4 48.8498 32.1444 47.6276 31.6333C46.4054 31.1222 45.3276 30.4 44.3943 29.4667C43.4609 28.5333 42.7276 27.4667 42.1943 26.2667C41.6832 25.0444 41.4276 23.7444 41.4276 22.3667C41.4276 20.9667 41.6832 19.6667 42.1943 18.4667C42.7276 17.2667 43.4498 16.2111 44.3609 15.3C45.2943 14.3667 46.372 13.6444 47.5943 13.1333C48.8387 12.6 50.1609 12.3333 51.5609 12.3333C52.9609 12.3333 54.272 12.6 55.4943 13.1333C56.7165 13.6444 57.7832 14.3667 58.6943 15.3C59.6276 16.2111 60.3609 17.2778 60.8943 18.5C61.4276 19.7 61.6943 20.9889 61.6943 22.3667C61.6943 23.7444 61.4276 25.0444 60.8943 26.2667C60.3609 27.4667 59.6276 28.5333 58.6943 29.4667C57.7609 30.4 56.6832 31.1222 55.4609 31.6333C54.2609 32.1444 52.9609 32.4 51.5609 32.4ZM51.5609 30.5333C53.072 30.5333 54.4387 30.1667 55.6609 29.4333C56.9054 28.7 57.8943 27.7222 58.6276 26.5C59.3609 25.2556 59.7276 23.8778 59.7276 22.3667C59.7276 20.8556 59.3609 19.4889 58.6276 18.2667C57.8943 17.0222 56.9054 16.0333 55.6609 15.3C54.4387 14.5667 53.072 14.2 51.5609 14.2C50.0498 14.2 48.672 14.5667 47.4276 15.3C46.1832 16.0333 45.1943 17.0222 44.4609 18.2667C43.7276 19.4889 43.3609 20.8556 43.3609 22.3667C43.3609 23.8778 43.7276 25.2556 44.4609 26.5C45.1943 27.7222 46.1832 28.7 47.4276 29.4333C48.672 30.1667 50.0498 30.5333 51.5609 30.5333ZM67.1818 32V12.7333H68.9484V17.5667C69.6818 15.9444 70.7373 14.7111 72.1151 13.8667C73.5151 13 75.0707 12.5667 76.7818 12.5667L77.2818 14.4667C77.1262 14.4444 76.9818 14.4333 76.8484 14.4333C76.7151 14.4111 76.5707 14.4 76.4151 14.4C75.0818 14.4 73.8595 14.7222 72.7484 15.3667C71.6373 16.0111 70.7484 16.9111 70.0818 18.0667C69.4373 19.2222 69.1151 20.6 69.1151 22.2V32H67.1818ZM81.6661 32V12.7333H83.5995V32H81.6661ZM82.6328 8.23333C82.3661 8.23333 82.1106 8.16667 81.8661 8.03333C81.6439 7.9 81.4661 7.72222 81.3328 7.5C81.1995 7.27778 81.1328 7.03333 81.1328 6.76667C81.1328 6.47778 81.1995 6.22222 81.3328 6C81.4661 5.77778 81.6439 5.6 81.8661 5.46667C82.1106 5.31111 82.3661 5.23333 82.6328 5.23333C82.9217 5.23333 83.1773 5.31111 83.3995 5.46667C83.6217 5.6 83.7995 5.77778 83.9328 6C84.0661 6.22222 84.1328 6.47778 84.1328 6.76667C84.1328 7.03333 84.0661 7.27778 83.9328 7.5C83.7995 7.72222 83.6217 7.9 83.3995 8.03333C83.1773 8.16667 82.9217 8.23333 82.6328 8.23333ZM91.2661 32.3C90.955 32.3 90.6661 32.2222 90.3995 32.0667C90.1328 31.9111 89.9217 31.7111 89.7661 31.4667C89.6328 31.2 89.5661 30.9111 89.5661 30.6C89.5661 30.2667 89.6328 29.9778 89.7661 29.7333C89.9217 29.4667 90.1328 29.2667 90.3995 29.1333C90.6661 28.9778 90.955 28.9 91.2661 28.9C91.5995 28.9 91.8884 28.9778 92.1328 29.1333C92.3995 29.2667 92.5995 29.4667 92.7328 29.7333C92.8884 29.9778 92.9661 30.2667 92.9661 30.6C92.9661 30.9111 92.8884 31.2 92.7328 31.4667C92.5995 31.7111 92.3995 31.9111 92.1328 32.0667C91.8884 32.2222 91.5995 32.3 91.2661 32.3Z"
        transform="translate(58 4)"
        className={invert ? "fill-white" : "fill-neutral-950"}
      />
    </svg>
  );
}

export function LogoLight({
  className,
  invert = false,
  filled = false,
  fillOnHover = false,
  ...props
}: React.ComponentPropsWithoutRef<"svg"> & {
  invert?: boolean;
  filled?: boolean;
  fillOnHover?: boolean;
}) {
  return (
    <svg
      viewBox="0 0 182 44"
      className={cn(fillOnHover && "group/logo", className)}
      {...props}
    >
      <Logomark
        preserveAspectRatio="xMinYMid meet"
        invert={invert}
        filled={filled}
      />
      <path
        d="M13.3141 32L3.6474 21.2333L11.6141 12.5H14.5474L6.68073 21.0667L16.5474 32H13.3141ZM0.347396 32V-9.53674e-07H2.8474V32H0.347396ZM27.5349 32.4C26.1127 32.4 24.8016 32.0444 23.6016 31.3333C22.4016 30.6222 21.4349 29.6222 20.7016 28.3333C19.9905 27.0222 19.6349 25.4667 19.6349 23.6667V12.5H22.1349V23.3C22.1349 25.2778 22.6905 26.9 23.8016 28.1667C24.9127 29.4111 26.346 30.0333 28.1016 30.0333C29.2349 30.0333 30.2682 29.7667 31.2016 29.2333C32.1571 28.6778 32.9238 27.9 33.5016 26.9C34.0793 25.9 34.3682 24.7222 34.3682 23.3667V12.5H36.8682V32H34.5682V28.1667C33.8571 29.5 32.8793 30.5444 31.6349 31.3C30.3905 32.0333 29.0238 32.4 27.5349 32.4ZM52.4401 32.4C51.0179 32.4 49.6845 32.1444 48.4401 31.6333C47.2179 31.1 46.129 30.3667 45.1734 29.4333C44.2401 28.5 43.5068 27.4222 42.9734 26.2C42.4401 24.9556 42.1734 23.6333 42.1734 22.2333C42.1734 20.8333 42.4401 19.5222 42.9734 18.3C43.5068 17.0778 44.2401 16 45.1734 15.0667C46.129 14.1333 47.2179 13.4111 48.4401 12.9C49.6845 12.3667 51.0179 12.1 52.4401 12.1C53.8623 12.1 55.1957 12.3667 56.4401 12.9C57.6845 13.4111 58.7734 14.1333 59.7068 15.0667C60.6401 16 61.3734 17.0778 61.9068 18.3C62.4401 19.5222 62.7068 20.8333 62.7068 22.2333C62.7068 23.6333 62.4401 24.9556 61.9068 26.2C61.3734 27.4222 60.629 28.5 59.6734 29.4333C58.7401 30.3667 57.6512 31.1 56.4068 31.6333C55.1845 32.1444 53.8623 32.4 52.4401 32.4ZM52.4401 30.0333C53.8845 30.0333 55.1957 29.6889 56.3734 29C57.5512 28.2889 58.4845 27.3444 59.1734 26.1667C59.8623 24.9889 60.2068 23.6889 60.2068 22.2667C60.2068 20.8222 59.8623 19.5111 59.1734 18.3333C58.4845 17.1556 57.5512 16.2222 56.3734 15.5333C55.1957 14.8222 53.8845 14.4667 52.4401 14.4667C51.0179 14.4667 49.7179 14.8222 48.5401 15.5333C47.3623 16.2222 46.4179 17.1556 45.7068 18.3333C45.0179 19.5111 44.6734 20.8111 44.6734 22.2333C44.6734 23.6778 45.0179 24.9889 45.7068 26.1667C46.4179 27.3444 47.3623 28.2889 48.5401 29C49.7179 29.6889 51.0179 30.0333 52.4401 30.0333ZM68.0349 32V12.5H70.3349V16.9333C71.046 15.4667 72.0571 14.3333 73.3682 13.5333C74.7016 12.7111 76.2127 12.3 77.9016 12.3L78.5016 14.7667C78.346 14.7222 78.1793 14.7 78.0016 14.7C77.8238 14.6778 77.646 14.6667 77.4682 14.6667C76.1571 14.6667 74.9682 14.9667 73.9016 15.5667C72.8571 16.1667 72.0349 17.0333 71.4349 18.1667C70.8349 19.2778 70.5349 20.6 70.5349 22.1333V32H68.0349ZM82.7068 32V12.5H85.2068V32H82.7068ZM83.9401 8.3C83.6068 8.3 83.3068 8.22222 83.0401 8.06667C82.7734 7.88889 82.5512 7.66667 82.3734 7.4C82.2179 7.13333 82.1401 6.83333 82.1401 6.5C82.1401 6.14444 82.2179 5.83333 82.3734 5.56667C82.5512 5.3 82.7734 5.08889 83.0401 4.93333C83.3068 4.77778 83.6068 4.7 83.9401 4.7C84.2957 4.7 84.6068 4.77778 84.8734 4.93333C85.1401 5.08889 85.3512 5.3 85.5068 5.56667C85.6623 5.83333 85.7401 6.14444 85.7401 6.5C85.7401 6.83333 85.6623 7.13333 85.5068 7.4C85.3512 7.66667 85.1401 7.88889 84.8734 8.06667C84.6068 8.22222 84.2957 8.3 83.9401 8.3ZM92.8682 32.3333C92.4905 32.3333 92.146 32.2444 91.8349 32.0667C91.546 31.8889 91.3127 31.6444 91.1349 31.3333C90.9571 31.0222 90.8682 30.6889 90.8682 30.3333C90.8682 29.9556 90.9571 29.6222 91.1349 29.3333C91.3127 29.0222 91.546 28.7778 91.8349 28.6C92.146 28.4222 92.4905 28.3333 92.8682 28.3333C93.246 28.3333 93.5793 28.4222 93.8682 28.6C94.1793 28.7778 94.4238 29.0222 94.6016 29.3333C94.7793 29.6222 94.8682 29.9556 94.8682 30.3333C94.8682 30.6889 94.7793 31.0222 94.6016 31.3333C94.4238 31.6444 94.1793 31.8889 93.8682 32.0667C93.5793 32.2444 93.246 32.3333 92.8682 32.3333Z"
        transform="translate(58 4)"
        className={invert ? "fill-white" : "fill-neutral-950"}
      />
    </svg>
  );
}

export function LogoRegular({
  className,
  invert = false,
  filled = false,
  fillOnHover = false,
  ...props
}: React.ComponentPropsWithoutRef<"svg"> & {
  invert?: boolean;
  filled?: boolean;
  fillOnHover?: boolean;
}) {
  return (
    <svg
      viewBox="0 0 182 44"
      className={cn(fillOnHover && "group/logo", className)}
      {...props}
    >
      <Logomark
        preserveAspectRatio="xMinYMid meet"
        invert={invert}
        filled={filled}
      />
      <path
        d="M13.7411 32L4.70781 21L12.1411 12H16.3078L9.00781 20.7333L18.3078 32H13.7411ZM0.707813 32V-9.53674e-07H4.30781V32H0.707813ZM28.6849 32.4C27.2849 32.4 25.9738 32.0556 24.7516 31.3667C23.5293 30.6556 22.5405 29.6333 21.7849 28.3C21.0293 26.9667 20.6516 25.3667 20.6516 23.5V12H24.2516V23C24.2516 24.5778 24.7182 25.9778 25.6516 27.2C26.6071 28.4 27.9405 29 29.6516 29C30.5849 29 31.4627 28.7778 32.2849 28.3333C33.1071 27.8667 33.7738 27.2 34.2849 26.3333C34.796 25.4444 35.0516 24.3667 35.0516 23.1V12H38.6516V32H35.3182V28.7667C34.5849 29.9444 33.6293 30.8444 32.4516 31.4667C31.296 32.0889 30.0405 32.4 28.6849 32.4ZM54.1849 32.4C52.7182 32.4 51.3516 32.1333 50.0849 31.6C48.8182 31.0667 47.696 30.3222 46.7182 29.3667C45.7627 28.4111 45.0071 27.3111 44.4516 26.0667C43.9182 24.8 43.6516 23.4444 43.6516 22C43.6516 20.5556 43.9182 19.2111 44.4516 17.9667C45.0071 16.7 45.7627 15.5889 46.7182 14.6333C47.696 13.6778 48.8182 12.9333 50.0849 12.4C51.3516 11.8667 52.7182 11.6 54.1849 11.6C55.6516 11.6 57.0182 11.8667 58.2849 12.4C59.5516 12.9333 60.6627 13.6778 61.6182 14.6333C62.596 15.5889 63.3516 16.7 63.8849 17.9667C64.4405 19.2111 64.7182 20.5556 64.7182 22C64.7182 23.4444 64.4405 24.8 63.8849 26.0667C63.3516 27.3111 62.596 28.4111 61.6182 29.3667C60.6627 30.3222 59.5516 31.0667 58.2849 31.6C57.0182 32.1333 55.6516 32.4 54.1849 32.4ZM54.1849 29C55.4738 29 56.6405 28.6889 57.6849 28.0667C58.7293 27.4222 59.5627 26.5778 60.1849 25.5333C60.8071 24.4667 61.1182 23.2889 61.1182 22C61.1182 20.7111 60.8071 19.5444 60.1849 18.5C59.5627 17.4333 58.7293 16.5889 57.6849 15.9667C56.6405 15.3222 55.4738 15 54.1849 15C52.896 15 51.7293 15.3222 50.6849 15.9667C49.6405 16.5889 48.8071 17.4333 48.1849 18.5C47.5627 19.5444 47.2516 20.7111 47.2516 22C47.2516 23.2889 47.5627 24.4667 48.1849 25.5333C48.8071 26.5778 49.6405 27.4222 50.6849 28.0667C51.7293 28.6889 52.896 29 54.1849 29ZM69.7078 32V12H73.0411V15.6667C73.7523 14.4889 74.6967 13.5556 75.8745 12.8667C77.0523 12.1556 78.4523 11.8 80.0745 11.8L80.9745 15.4C80.7523 15.3333 80.5078 15.2889 80.2411 15.2667C79.9967 15.2222 79.7523 15.2 79.5078 15.2C78.2634 15.2 77.1745 15.4667 76.2411 16C75.3078 16.5333 74.5856 17.3111 74.0745 18.3333C73.5634 19.3556 73.3078 20.6 73.3078 22.0667V32H69.7078ZM84.7078 32V12H88.3078V32H84.7078ZM86.5078 8.4C86.0634 8.4 85.6523 8.3 85.2745 8.1C84.9189 7.87778 84.63 7.58889 84.4078 7.23333C84.2078 6.85555 84.1078 6.44444 84.1078 6C84.1078 5.53333 84.2078 5.12222 84.4078 4.76667C84.63 4.41111 84.9189 4.13333 85.2745 3.93333C85.6523 3.71111 86.0634 3.6 86.5078 3.6C86.9745 3.6 87.3856 3.71111 87.7411 3.93333C88.0967 4.13333 88.3745 4.41111 88.5745 4.76667C88.7967 5.12222 88.9078 5.53333 88.9078 6C88.9078 6.44444 88.7967 6.85555 88.5745 7.23333C88.3745 7.58889 88.0967 7.87778 87.7411 8.1C87.3856 8.3 86.9745 8.4 86.5078 8.4ZM95.9922 32.4C95.5033 32.4 95.0589 32.2778 94.6589 32.0333C94.2811 31.8111 93.97 31.5111 93.7255 31.1333C93.5033 30.7333 93.3922 30.2889 93.3922 29.8C93.3922 29.3111 93.5033 28.8778 93.7255 28.5C93.97 28.1 94.2811 27.7889 94.6589 27.5667C95.0589 27.3222 95.5033 27.2 95.9922 27.2C96.5033 27.2 96.9477 27.3222 97.3255 27.5667C97.7255 27.7889 98.0366 28.1 98.2589 28.5C98.4811 28.8778 98.5922 29.3111 98.5922 29.8C98.5922 30.2889 98.4811 30.7333 98.2589 31.1333C98.0366 31.5111 97.7255 31.8111 97.3255 32.0333C96.9477 32.2778 96.5033 32.4 95.9922 32.4Z"
        transform="translate(58 4)"
        className={invert ? "fill-white" : "fill-neutral-950"}
      />
    </svg>
  );
}

export function LogoNormal({
  className,
  invert = false,
  filled = false,
  fillOnHover = false,
  ...props
}: React.ComponentPropsWithoutRef<"svg"> & {
  invert?: boolean;
  filled?: boolean;
  fillOnHover?: boolean;
}) {
  return (
    <svg
      viewBox="0 0 182 44"
      className={cn(fillOnHover && "group/logo", className)}
      {...props}
    >
      <Logomark
        preserveAspectRatio="xMinYMid meet"
        invert={invert}
        filled={filled}
      />
      <path
        d="M13.9292 32L5.4625 21L12.4292 12H17.6292L10.7958 20.6L19.6292 32H13.9292ZM0.7625 32V-9.53674e-07H5.4625V32H0.7625ZM29.4625 32.5333C28.0625 32.5333 26.7403 32.1889 25.4958 31.5C24.2736 30.8111 23.2736 29.8111 22.4958 28.5C21.7403 27.1667 21.3625 25.5778 21.3625 23.7333V12H26.0625V23.1C26.0625 24.4556 26.4625 25.6556 27.2625 26.7C28.0847 27.7222 29.2292 28.2333 30.6958 28.2333C31.4958 28.2333 32.2514 28.0444 32.9625 27.6667C33.6736 27.2667 34.2403 26.6889 34.6625 25.9333C35.1069 25.1778 35.3292 24.2556 35.3292 23.1667V12H40.0292V32H35.7292V29.3333C35.0181 30.3556 34.1069 31.1444 32.9958 31.7C31.9069 32.2556 30.7292 32.5333 29.4625 32.5333ZM54.901 32.5333C53.4344 32.5333 52.0566 32.2667 50.7677 31.7333C49.4788 31.1778 48.3455 30.4222 47.3677 29.4667C46.3899 28.4889 45.6233 27.3667 45.0677 26.1C44.5122 24.8333 44.2344 23.4667 44.2344 22C44.2344 20.5333 44.5122 19.1667 45.0677 17.9C45.6233 16.6333 46.3899 15.5222 47.3677 14.5667C48.3455 13.5889 49.4788 12.8333 50.7677 12.3C52.0566 11.7444 53.4344 11.4667 54.901 11.4667C56.3899 11.4667 57.7788 11.7444 59.0677 12.3C60.3566 12.8333 61.4788 13.5889 62.4344 14.5667C63.4122 15.5222 64.1788 16.6333 64.7344 17.9C65.2899 19.1667 65.5677 20.5333 65.5677 22C65.5677 23.4667 65.2899 24.8333 64.7344 26.1C64.1788 27.3667 63.4122 28.4889 62.4344 29.4667C61.4788 30.4222 60.3566 31.1778 59.0677 31.7333C57.7788 32.2667 56.3899 32.5333 54.901 32.5333ZM54.901 28.2333C56.0566 28.2333 57.0899 27.9556 58.001 27.4C58.9344 26.8222 59.6788 26.0667 60.2344 25.1333C60.7899 24.2 61.0677 23.1556 61.0677 22C61.0677 20.8444 60.7899 19.8 60.2344 18.8667C59.6788 17.9333 58.9344 17.1889 58.001 16.6333C57.0677 16.0556 56.0344 15.7667 54.901 15.7667C53.7677 15.7667 52.7344 16.0556 51.801 16.6333C50.8677 17.1889 50.1233 17.9333 49.5677 18.8667C49.0344 19.8 48.7677 20.8444 48.7677 22C48.7677 23.1556 49.0344 24.2 49.5677 25.1333C50.1233 26.0667 50.8566 26.8222 51.7677 27.4C52.701 27.9556 53.7455 28.2333 54.901 28.2333ZM69.7625 32V12H74.0292V15.5333C74.7403 14.3778 75.6514 13.4667 76.7625 12.8C77.8736 12.1333 79.1958 11.8 80.7292 11.8L81.7958 16.1667C81.5736 16.1 81.3403 16.0556 81.0958 16.0333C80.8514 15.9889 80.6069 15.9667 80.3625 15.9667C79.1847 15.9667 78.1514 16.2222 77.2625 16.7333C76.3736 17.2444 75.6847 17.9889 75.1958 18.9667C74.7069 19.9222 74.4625 21.1 74.4625 22.5V32H69.7625ZM84.9833 32V12H89.6833V32H84.9833ZM87.35 8.73333C86.8389 8.73333 86.3722 8.61111 85.95 8.36667C85.55 8.12222 85.2278 7.8 84.9833 7.4C84.7389 6.97778 84.6167 6.51111 84.6167 6C84.6167 5.46667 84.7389 5 84.9833 4.6C85.2278 4.17778 85.55 3.84444 85.95 3.6C86.3722 3.35555 86.8389 3.23333 87.35 3.23333C87.8833 3.23333 88.35 3.35555 88.75 3.6C89.1722 3.84444 89.5056 4.17778 89.75 4.6C89.9944 5 90.1167 5.46667 90.1167 6C90.1167 6.51111 89.9944 6.97778 89.75 7.4C89.5056 7.8 89.1722 8.12222 88.75 8.36667C88.35 8.61111 87.8833 8.73333 87.35 8.73333ZM97.1552 32.5333C96.5774 32.5333 96.0552 32.3889 95.5885 32.1C95.1219 31.8333 94.7552 31.4667 94.4885 31C94.2219 30.5333 94.0885 30.0111 94.0885 29.4333C94.0885 28.8333 94.2219 28.3111 94.4885 27.8667C94.7552 27.4 95.1219 27.0333 95.5885 26.7667C96.0552 26.4778 96.5774 26.3333 97.1552 26.3333C97.7774 26.3333 98.3219 26.4778 98.7885 26.7667C99.2552 27.0333 99.6219 27.4 99.8885 27.8667C100.155 28.3333 100.289 28.8556 100.289 29.4333C100.289 30.0111 100.155 30.5333 99.8885 31C99.6219 31.4667 99.2552 31.8333 98.7885 32.1C98.3219 32.3889 97.7774 32.5333 97.1552 32.5333Z"
        transform="translate(58 4)"
        className={invert ? "fill-white" : "fill-neutral-950"}
      />
    </svg>
  );
}

export function LogoSemibold({
  className,
  invert = false,
  filled = false,
  fillOnHover = false,
  ...props
}: React.ComponentPropsWithoutRef<"svg"> & {
  invert?: boolean;
  filled?: boolean;
  fillOnHover?: boolean;
}) {
  return (
    <svg
      viewBox="0 0 182 44"
      className={cn(fillOnHover && "group/logo", className)}
      {...props}
    >
      <Logomark
        preserveAspectRatio="xMinYMid meet"
        invert={invert}
        filled={filled}
      />
      <path
        d="M13.5516 32L5.35156 21L12.0849 12H17.8182L11.1849 20.5667L19.8182 32H13.5516ZM0.318229 32V-9.53674e-07H5.55156V32H0.318229ZM29.3464 32.6C27.9464 32.6 26.6241 32.2556 25.3797 31.5667C24.1352 30.8778 23.1352 29.8889 22.3797 28.6C21.6241 27.2889 21.2464 25.7 21.2464 23.8333V12H26.4797V23.1333C26.4797 24.3778 26.8464 25.4778 27.5797 26.4333C28.3352 27.3667 29.3797 27.8333 30.713 27.8333C31.4686 27.8333 32.1686 27.6556 32.813 27.3C33.4575 26.9444 33.9797 26.4222 34.3797 25.7333C34.7797 25.0444 34.9797 24.2111 34.9797 23.2333V12H40.2464V32H35.4464V29.6C34.7352 30.5778 33.8464 31.3222 32.7797 31.8333C31.713 32.3444 30.5686 32.6 29.3464 32.6ZM54.7641 32.6C53.2752 32.6 51.8752 32.3222 50.5641 31.7667C49.2752 31.2111 48.1307 30.4556 47.1307 29.5C46.153 28.5222 45.3863 27.4 44.8307 26.1333C44.2974 24.8444 44.0307 23.4667 44.0307 22C44.0307 20.5333 44.2974 19.1667 44.8307 17.9C45.3863 16.6111 46.153 15.4778 47.1307 14.5C48.1307 13.5222 49.2752 12.7667 50.5641 12.2333C51.8752 11.6778 53.2752 11.4 54.7641 11.4C56.2307 11.4 57.6085 11.6778 58.8974 12.2333C60.2085 12.7667 61.353 13.5222 62.3307 14.5C63.3307 15.4778 64.1085 16.6111 64.6641 17.9C65.2196 19.1667 65.4974 20.5333 65.4974 22C65.4974 23.4667 65.2196 24.8444 64.6641 26.1333C64.1085 27.4 63.3307 28.5222 62.3307 29.5C61.353 30.4556 60.2085 31.2111 58.8974 31.7667C57.6085 32.3222 56.2307 32.6 54.7641 32.6ZM54.7307 27.8333C55.8196 27.8333 56.7974 27.5778 57.6641 27.0667C58.5307 26.5333 59.2196 25.8222 59.7307 24.9333C60.2418 24.0444 60.4974 23.0667 60.4974 22C60.4974 20.9111 60.2418 19.9333 59.7307 19.0667C59.2196 18.1778 58.5307 17.4667 57.6641 16.9333C56.7974 16.4 55.8196 16.1333 54.7307 16.1333C53.6641 16.1333 52.6974 16.4 51.8307 16.9333C50.9641 17.4667 50.2752 18.1778 49.7641 19.0667C49.253 19.9333 48.9974 20.9111 48.9974 22C48.9974 23.0667 49.253 24.0444 49.7641 24.9333C50.2752 25.8222 50.9641 26.5333 51.8307 27.0667C52.6974 27.5778 53.6641 27.8333 54.7307 27.8333ZM69.3182 32V12H74.0516V15.5C74.7405 14.3222 75.6293 13.4111 76.7182 12.7667C77.8071 12.1222 79.0849 11.8 80.5516 11.8L81.7182 16.5333C81.496 16.4667 81.2627 16.4222 81.0182 16.4C80.7738 16.3556 80.5293 16.3333 80.2849 16.3333C79.1293 16.3333 78.1182 16.5889 77.2516 17.1C76.4071 17.5889 75.7405 18.3111 75.2516 19.2667C74.7849 20.2222 74.5516 21.3778 74.5516 22.7333V32H69.3182ZM84.6328 32V12H89.8995V32H84.6328ZM87.2661 8.93333C86.7328 8.93333 86.2439 8.8 85.7995 8.53333C85.355 8.26667 84.9995 7.91111 84.7328 7.46667C84.4661 7.02222 84.3328 6.53333 84.3328 6C84.3328 5.42222 84.4661 4.92222 84.7328 4.5C84.9995 4.05555 85.355 3.71111 85.7995 3.46667C86.2439 3.2 86.7328 3.06667 87.2661 3.06667C87.8439 3.06667 88.3439 3.2 88.7661 3.46667C89.2106 3.71111 89.555 4.05555 89.7995 4.5C90.0661 4.92222 90.1995 5.42222 90.1995 6C90.1995 6.53333 90.0661 7.02222 89.7995 7.46667C89.555 7.91111 89.2106 8.26667 88.7661 8.53333C88.3439 8.8 87.8439 8.93333 87.2661 8.93333ZM97.2651 32.6C96.6429 32.6 96.0762 32.4444 95.5651 32.1333C95.0762 31.8444 94.6762 31.4556 94.3651 30.9667C94.0762 30.4556 93.9318 29.8778 93.9318 29.2333C93.9318 28.6111 94.0762 28.0556 94.3651 27.5667C94.6762 27.0556 95.0762 26.6556 95.5651 26.3667C96.0762 26.0556 96.6429 25.9 97.2651 25.9C97.9318 25.9 98.5095 26.0556 98.9984 26.3667C99.5095 26.6556 99.9095 27.0556 100.198 27.5667C100.487 28.0556 100.632 28.6111 100.632 29.2333C100.632 29.8556 100.487 30.4222 100.198 30.9333C99.9095 31.4444 99.5095 31.8444 98.9984 32.1333C98.5095 32.4444 97.9318 32.6 97.2651 32.6Z"
        transform="translate(58 4)"
        className={invert ? "fill-white" : "fill-neutral-950"}
      />
    </svg>
  );
}

export function LogoBold({
  className,
  invert = false,
  filled = false,
  fillOnHover = false,
  ...props
}: React.ComponentPropsWithoutRef<"svg"> & {
  invert?: boolean;
  filled?: boolean;
  fillOnHover?: boolean;
}) {
  return (
    <svg
      viewBox="0 0 182 44"
      className={cn(fillOnHover && "group/logo", className)}
      {...props}
    >
      <Logomark
        preserveAspectRatio="xMinYMid meet"
        invert={invert}
        filled={filled}
      />
      <path
        d="M14.1875 32L6.2875 21L12.7875 12H19.0208L12.6208 20.5L21.0208 32H14.1875ZM0.8875 32V-9.53674e-07H6.6875V32H0.8875ZM30.2771 32.6667C28.8771 32.6667 27.5549 32.3333 26.3104 31.6667C25.066 30.9778 24.0549 29.9889 23.2771 28.7C22.5215 27.3889 22.1438 25.8111 22.1438 23.9667V12H27.9437V23.2C27.9437 24.3111 28.2771 25.3 28.9438 26.1667C29.6326 27.0333 30.5882 27.4667 31.8104 27.4667C32.4771 27.4667 33.0993 27.3111 33.6771 27C34.2771 26.6667 34.7549 26.1889 35.1104 25.5667C35.4882 24.9444 35.6771 24.1778 35.6771 23.2667V12H41.4771V32H36.2104V29.9C35.4993 30.7889 34.6215 31.4778 33.5771 31.9667C32.5549 32.4333 31.4549 32.6667 30.2771 32.6667ZM55.6875 32.6667C54.1986 32.6667 52.7986 32.3889 51.4875 31.8333C50.1764 31.2778 49.0208 30.5111 48.0208 29.5333C47.0431 28.5556 46.2764 27.4222 45.7208 26.1333C45.1653 24.8444 44.8875 23.4667 44.8875 22C44.8875 20.5333 45.1653 19.1556 45.7208 17.8667C46.2764 16.5778 47.0431 15.4444 48.0208 14.4667C49.0208 13.4889 50.1764 12.7222 51.4875 12.1667C52.7986 11.6111 54.1986 11.3333 55.6875 11.3333C57.1764 11.3333 58.5764 11.6111 59.8875 12.1667C61.1986 12.7222 62.3431 13.4889 63.3208 14.4667C64.3208 15.4444 65.0986 16.5778 65.6542 17.8667C66.2097 19.1556 66.4875 20.5333 66.4875 22C66.4875 23.4667 66.2097 24.8444 65.6542 26.1333C65.0986 27.4222 64.3208 28.5556 63.3208 29.5333C62.3431 30.5111 61.1986 31.2778 59.8875 31.8333C58.5764 32.3889 57.1764 32.6667 55.6875 32.6667ZM55.6875 27.4667C56.6875 27.4667 57.5875 27.2222 58.3875 26.7333C59.2097 26.2444 59.8542 25.5889 60.3208 24.7667C60.8097 23.9222 61.0542 23 61.0542 22C61.0542 20.9778 60.8097 20.0556 60.3208 19.2333C59.8542 18.4111 59.2097 17.7556 58.3875 17.2667C57.5875 16.7778 56.6875 16.5333 55.6875 16.5333C54.6875 16.5333 53.7764 16.7778 52.9542 17.2667C52.1542 17.7556 51.5097 18.4111 51.0208 19.2333C50.5542 20.0556 50.3208 20.9778 50.3208 22C50.3208 23 50.5542 23.9222 51.0208 24.7667C51.5097 25.5889 52.1542 26.2444 52.9542 26.7333C53.7764 27.2222 54.6875 27.4667 55.6875 27.4667ZM69.8875 32V12H75.0875V15.4333C75.7764 14.2778 76.6431 13.3889 77.6875 12.7667C78.7542 12.1222 79.9986 11.8 81.4208 11.8L82.6875 16.9333C82.4653 16.8667 82.2319 16.8222 81.9875 16.8C81.7431 16.7556 81.4986 16.7333 81.2542 16.7333C80.1431 16.7333 79.1653 16.9778 78.3208 17.4667C77.4986 17.9556 76.8542 18.6667 76.3875 19.6C75.9208 20.5111 75.6875 21.6333 75.6875 22.9667V32H69.8875ZM85.2823 32V12H91.0823V32H85.2823ZM88.1823 9.1C87.6045 9.1 87.0823 8.96667 86.6156 8.7C86.149 8.41111 85.7712 8.03333 85.4823 7.56667C85.2156 7.1 85.0823 6.57778 85.0823 6C85.0823 5.4 85.2156 4.86667 85.4823 4.4C85.7712 3.93333 86.149 3.56667 86.6156 3.3C87.0823 3.03333 87.6045 2.9 88.1823 2.9C88.7823 2.9 89.3156 3.03333 89.7823 3.3C90.249 3.56667 90.6156 3.93333 90.8823 4.4C91.149 4.86667 91.2823 5.4 91.2823 6C91.2823 6.57778 91.149 7.1 90.8823 7.56667C90.6156 8.03333 90.249 8.41111 89.7823 8.7C89.3156 8.96667 88.7823 9.1 88.1823 9.1ZM98.3281 32.6667C97.6392 32.6667 97.0281 32.5 96.4948 32.1667C95.9615 31.8556 95.5281 31.4333 95.1948 30.9C94.8837 30.3444 94.7281 29.7333 94.7281 29.0667C94.7281 28.3778 94.8837 27.7667 95.1948 27.2333C95.5281 26.7 95.9615 26.2778 96.4948 25.9667C97.0281 25.6333 97.6392 25.4667 98.3281 25.4667C99.017 25.4667 99.6281 25.6333 100.161 25.9667C100.717 26.2778 101.15 26.7 101.461 27.2333C101.773 27.7667 101.928 28.3778 101.928 29.0667C101.928 29.7333 101.773 30.3444 101.461 30.9C101.15 31.4333 100.717 31.8556 100.161 32.1667C99.6281 32.5 99.017 32.6667 98.3281 32.6667Z"
        transform="translate(58 4)"
        className={invert ? "fill-white" : "fill-neutral-950"}
      />
    </svg>
  );
}

export function LogoExtraBold({
  className,
  invert = false,
  filled = false,
  fillOnHover = false,
  ...props
}: React.ComponentPropsWithoutRef<"svg"> & {
  invert?: boolean;
  filled?: boolean;
  fillOnHover?: boolean;
}) {
  return (
    <svg
      viewBox="0 0 182 44"
      className={cn(fillOnHover && "group/logo", className)}
      {...props}
    >
      <Logomark
        preserveAspectRatio="xMinYMid meet"
        invert={invert}
        filled={filled}
      />
      <path
        d="M14.199 32L7.23229 20.9L13.099 11.5H20.7656L14.9656 20.3333L22.5323 32H14.199ZM0.665625 32V-9.53674e-07H7.96563V32H0.665625ZM31.4938 32.6667C30.0938 32.6667 28.7493 32.3333 27.4604 31.6667C26.1938 30.9778 25.1604 29.9778 24.3604 28.6667C23.5826 27.3333 23.1938 25.7333 23.1938 23.8667V11.5H30.4938V22.9667C30.4938 23.8333 30.7604 24.5889 31.2938 25.2333C31.8271 25.8556 32.5382 26.1667 33.4271 26.1667C33.9826 26.1667 34.4826 26.0444 34.9271 25.8C35.3715 25.5333 35.7271 25.1667 35.9938 24.7C36.2604 24.2333 36.3938 23.6667 36.3938 23V11.5H43.6938V32H37.3604V30C36.6271 30.8667 35.7493 31.5333 34.7271 32C33.7271 32.4444 32.6493 32.6667 31.4938 32.6667ZM57.7604 32.6667C56.2049 32.6667 54.7493 32.3889 53.3938 31.8333C52.0604 31.2556 50.8826 30.4778 49.8604 29.5C48.8604 28.5 48.0715 27.3444 47.4937 26.0333C46.9382 24.7 46.6604 23.2667 46.6604 21.7333C46.6604 20.2222 46.9382 18.8111 47.4937 17.5C48.0715 16.1667 48.8604 15 49.8604 14C50.8826 13 52.0604 12.2222 53.3938 11.6667C54.7493 11.1111 56.2049 10.8333 57.7604 10.8333C59.316 10.8333 60.7715 11.1111 62.1271 11.6667C63.4826 12.2222 64.6604 13 65.6604 14C66.6604 15 67.4493 16.1667 68.0271 17.5C68.6049 18.8111 68.8938 20.2222 68.8938 21.7333C68.8938 23.2667 68.6049 24.7 68.0271 26.0333C67.4493 27.3444 66.6604 28.5 65.6604 29.5C64.6604 30.4778 63.4826 31.2556 62.1271 31.8333C60.7715 32.3889 59.316 32.6667 57.7604 32.6667ZM57.7604 26.0667C58.5604 26.0667 59.2715 25.8778 59.8938 25.5C60.5382 25.1 61.0493 24.5778 61.4271 23.9333C61.8049 23.2667 61.9938 22.5333 61.9938 21.7333C61.9938 20.9333 61.8049 20.2111 61.4271 19.5667C61.0493 18.9222 60.5382 18.4111 59.8938 18.0333C59.2493 17.6333 58.5382 17.4333 57.7604 17.4333C56.9826 17.4333 56.2715 17.6333 55.6271 18.0333C54.9826 18.4111 54.4715 18.9222 54.0938 19.5667C53.716 20.2111 53.5271 20.9333 53.5271 21.7333C53.5271 22.5333 53.716 23.2667 54.0938 23.9333C54.4715 24.5778 54.9826 25.1 55.6271 25.5C56.2715 25.8778 56.9826 26.0667 57.7604 26.0667ZM71.8219 32V11.5H78.1219V14.2C78.7885 13.2222 79.5997 12.4778 80.5552 11.9667C81.5108 11.4556 82.5997 11.2 83.8219 11.2L85.4219 17.7C85.1774 17.6111 84.9219 17.5556 84.6552 17.5333C84.3885 17.4889 84.1219 17.4667 83.8552 17.4667C82.8997 17.4667 82.0663 17.6889 81.3552 18.1333C80.6441 18.5778 80.0885 19.2111 79.6885 20.0333C79.3108 20.8556 79.1219 21.8444 79.1219 23V32H71.8219ZM87.5115 32V11.5H94.8115V32H87.5115ZM91.1781 9.33333C90.4892 9.33333 89.867 9.16667 89.3115 8.83333C88.7559 8.5 88.3115 8.05555 87.9781 7.5C87.6448 6.94444 87.4781 6.32222 87.4781 5.63333C87.4781 4.92222 87.6448 4.28889 87.9781 3.73333C88.3115 3.17778 88.7559 2.74444 89.3115 2.43333C89.867 2.1 90.4892 1.93333 91.1781 1.93333C91.8892 1.93333 92.5226 2.1 93.0781 2.43333C93.6337 2.74444 94.067 3.17778 94.3781 3.73333C94.7115 4.28889 94.8781 4.92222 94.8781 5.63333C94.8781 6.32222 94.7115 6.95555 94.3781 7.53333C94.067 8.08889 93.6337 8.53333 93.0781 8.86667C92.5226 9.17778 91.8892 9.33333 91.1781 9.33333ZM101.968 32.6667C101.19 32.6667 100.479 32.4778 99.8344 32.1C99.1899 31.7222 98.6788 31.2111 98.301 30.5667C97.9233 29.9222 97.7344 29.2 97.7344 28.4C97.7344 27.6 97.9233 26.8889 98.301 26.2667C98.6788 25.6222 99.1899 25.1111 99.8344 24.7333C100.479 24.3556 101.19 24.1667 101.968 24.1667C102.79 24.1667 103.523 24.3556 104.168 24.7333C104.812 25.1111 105.312 25.6222 105.668 26.2667C106.045 26.8889 106.234 27.6 106.234 28.4C106.234 29.2 106.045 29.9222 105.668 30.5667C105.312 31.2111 104.812 31.7222 104.168 32.1C103.523 32.4778 102.79 32.6667 101.968 32.6667Z"
        transform="translate(58 4)"
        className={invert ? "fill-white" : "fill-neutral-950"}
      />
    </svg>
  );
}

export function LogoBlack({
  className,
  invert = false,
  filled = false,
  fillOnHover = false,
  ...props
}: React.ComponentPropsWithoutRef<"svg"> & {
  invert?: boolean;
  filled?: boolean;
  fillOnHover?: boolean;
}) {
  return (
    <svg
      viewBox="0 0 182 44"
      className={cn(fillOnHover && "group/logo", className)}
      {...props}
    >
      <Logomark
        preserveAspectRatio="xMinYMid meet"
        invert={invert}
        filled={filled}
      />
      <path
        d="M14.1245 32L7.65781 20.8667L13.2245 11.2333H21.5578L16.0911 20.2333L23.2578 32H14.1245ZM0.524479 32V-9.53674e-07H8.55781V32H0.524479ZM32.0953 32.6667C30.6731 32.6667 29.3175 32.3333 28.0286 31.6667C26.7398 30.9778 25.6953 29.9778 24.8953 28.6667C24.0953 27.3333 23.6953 25.7111 23.6953 23.8V11.2333H31.762V22.8333C31.762 23.5889 31.9953 24.2222 32.462 24.7333C32.9286 25.2444 33.5175 25.5 34.2286 25.5C34.6953 25.5 35.1175 25.4 35.4953 25.2C35.8731 24.9778 36.1731 24.6667 36.3953 24.2667C36.6175 23.8667 36.7286 23.4 36.7286 22.8667V11.2333H44.7953V32H37.8953V30.0667C37.1398 30.9333 36.262 31.5778 35.262 32C34.262 32.4444 33.2064 32.6667 32.0953 32.6667ZM58.7901 32.6667C57.1901 32.6667 55.7012 32.3889 54.3234 31.8333C52.9679 31.2556 51.779 30.4667 50.7568 29.4667C49.7345 28.4667 48.9345 27.3 48.3568 25.9667C47.779 24.6333 47.4901 23.1889 47.4901 21.6333C47.4901 20.0778 47.779 18.6333 48.3568 17.3C48.9345 15.9444 49.7345 14.7667 50.7568 13.7667C51.779 12.7667 52.9679 11.9889 54.3234 11.4333C55.7012 10.8556 57.1901 10.5667 58.7901 10.5667C60.3679 10.5667 61.8345 10.8556 63.1901 11.4333C64.5679 11.9889 65.7679 12.7667 66.7901 13.7667C67.8123 14.7667 68.6123 15.9444 69.1901 17.3C69.7679 18.6333 70.0568 20.0778 70.0568 21.6333C70.0568 23.1889 69.7679 24.6333 69.1901 25.9667C68.6123 27.3 67.8123 28.4667 66.7901 29.4667C65.7679 30.4667 64.5679 31.2556 63.1901 31.8333C61.8345 32.3889 60.3679 32.6667 58.7901 32.6667ZM58.7901 25.3667C59.4568 25.3667 60.0679 25.2 60.6234 24.8667C61.179 24.5333 61.6234 24.0889 61.9568 23.5333C62.2901 22.9556 62.4568 22.3111 62.4568 21.6C62.4568 20.9111 62.2901 20.2889 61.9568 19.7333C61.6234 19.1556 61.179 18.7 60.6234 18.3667C60.0679 18.0333 59.4457 17.8667 58.7568 17.8667C58.0901 17.8667 57.479 18.0333 56.9234 18.3667C56.3679 18.7 55.9234 19.1556 55.5901 19.7333C55.279 20.2889 55.1234 20.9111 55.1234 21.6C55.1234 22.3111 55.279 22.9556 55.5901 23.5333C55.9234 24.0889 56.3679 24.5333 56.9234 24.8667C57.479 25.2 58.1012 25.3667 58.7901 25.3667ZM72.8057 32V11.2333H79.6391V13.6C80.3057 12.7111 81.0835 12.0444 81.9724 11.6C82.8835 11.1333 83.8946 10.9 85.0057 10.9L86.8057 18.0667C86.5168 18 86.2391 17.9444 85.9724 17.9C85.7057 17.8556 85.4391 17.8333 85.1724 17.8333C84.2835 17.8333 83.5168 18.0444 82.8724 18.4667C82.228 18.8889 81.728 19.4889 81.3724 20.2667C81.0168 21.0444 80.8391 21.9667 80.8391 23.0333V32H72.8057ZM88.6495 32V11.2333H96.7161V32H88.6495ZM92.6828 9.46667C91.9495 9.44444 91.2828 9.26667 90.6828 8.93333C90.0828 8.57778 89.5939 8.1 89.2161 7.5C88.8606 6.87778 88.6828 6.2 88.6828 5.46667C88.6828 4.68889 88.8606 4 89.2161 3.4C89.5939 2.8 90.0828 2.33333 90.6828 2C91.2828 1.64444 91.9495 1.46667 92.6828 1.46667C93.4606 1.46667 94.1495 1.64444 94.7495 2C95.3495 2.33333 95.8161 2.8 96.1495 3.4C96.505 4 96.6828 4.68889 96.6828 5.46667C96.6828 6.2 96.505 6.87778 96.1495 7.5C95.7939 8.1 95.3161 8.57778 94.7161 8.93333C94.1384 9.26667 93.4606 9.44444 92.6828 9.46667ZM103.828 32.6667C102.983 32.6667 102.205 32.4556 101.494 32.0333C100.805 31.6333 100.261 31.0889 99.8609 30.4C99.4609 29.7111 99.2609 28.9333 99.2609 28.0667C99.2609 27.2222 99.4609 26.4556 99.8609 25.7667C100.261 25.0778 100.805 24.5333 101.494 24.1333C102.205 23.7111 102.983 23.5 103.828 23.5C104.716 23.5 105.494 23.7111 106.161 24.1333C106.85 24.5333 107.394 25.0778 107.794 25.7667C108.216 26.4556 108.428 27.2222 108.428 28.0667C108.428 28.9333 108.216 29.7111 107.794 30.4C107.394 31.0889 106.85 31.6333 106.161 32.0333C105.494 32.4556 104.716 32.6667 103.828 32.6667Z"
        transform="translate(58 4)"
        className={invert ? "fill-white" : "fill-neutral-950"}
      />
    </svg>
  );
}

// export function LogoOld({
//   className,
//   invert = false,
//   filled = false,
//   fillOnHover = false,
//   ...props
// }: React.ComponentPropsWithoutRef<'svg'> & {
//   invert?: boolean
//   filled?: boolean
//   fillOnHover?: boolean
// }) {
//   return (
//     <svg
//       viewBox="0 0 182 44"
//       aria-hidden="true"
//       className={cn(fillOnHover && 'group/logo', className)}
//       {...props}
//     >
//       <Logomark
//         preserveAspectRatio="xMinYMid meet"
//         invert={invert}
//         filled={filled}
//       />
//       <path
//         className={invert ? 'fill-white' : 'fill-neutral-950'}
//         d="M58.1019 37V35.56C59.0939 35.56 59.7659 35.32 60.1179 34.84C60.5019 34.328 60.7259 33.64 60.7899 32.776C60.8539 31.88 60.8859 30.856 60.8859 29.704L60.9339 7C60.9339 6.488 60.9339 6.008 60.9339 5.56C60.9659 5.08 61.0139 4.52 61.0779 3.88C60.5019 3.912 59.9259 3.944 59.3499 3.976C58.8059 4.008 58.2459 4.04 57.6699 4.072V2.056C59.0779 2.056 60.1659 1.992 60.9339 1.864C61.7019 1.736 62.2779 1.576 62.6619 1.384C63.0779 1.192 63.3979 0.983998 63.6219 0.759997H65.0139V23.464H66.9339L72.7899 17.32C73.3339 16.776 73.8299 16.296 74.2779 15.88C74.7259 15.432 75.1739 15.064 75.6219 14.776L72.3579 14.92V13H81.0939V14.44C80.0059 14.536 78.9819 14.888 78.0219 15.496C77.0939 16.072 76.2299 16.728 75.4299 17.464C74.6619 18.2 73.9899 18.872 73.4139 19.48L69.6699 23.416C70.3099 23.704 70.8539 24.072 71.3019 24.52C71.7499 24.968 72.1979 25.464 72.6459 26.008L76.0539 30.376C76.2139 30.568 76.4859 30.936 76.8699 31.48C77.2859 32.024 77.7659 32.616 78.3099 33.256C78.8859 33.896 79.4779 34.44 80.0859 34.888C80.7259 35.336 81.3179 35.56 81.8619 35.56V37H77.4939C76.5979 37 75.7499 36.536 74.9499 35.608C74.1499 34.68 73.3019 33.64 72.4059 32.488C71.5739 31.336 70.8219 30.296 70.1499 29.368C69.5099 28.408 68.9179 27.576 68.3739 26.872C67.8619 26.168 67.3979 25.624 66.9819 25.24L65.0139 25.336V31.912C65.0139 32.552 64.9979 33.128 64.9659 33.64C64.9659 34.12 64.9179 34.632 64.8219 35.176C65.3339 35.144 65.8459 35.128 66.3579 35.128C66.8699 35.096 67.3819 35.064 67.8939 35.032V37H58.1019ZM94.4431 37.768C92.7151 37.768 91.2591 37.448 90.0751 36.808C88.9231 36.168 88.0431 35.08 87.4351 33.544C86.8591 32.008 86.5711 29.928 86.5711 27.304V18.76C86.5711 18.248 86.5711 17.736 86.5711 17.224C86.6031 16.712 86.6671 16.184 86.7631 15.64C86.2191 15.672 85.6591 15.704 85.0831 15.736C84.5391 15.736 83.9951 15.752 83.4511 15.784V13.816H84.9391C86.3151 13.816 87.3071 13.688 87.9151 13.432C88.5551 13.144 89.0511 12.84 89.4031 12.52H90.7951V27.16C90.7951 29.912 91.1791 31.976 91.9471 33.352C92.7471 34.696 94.0911 35.352 95.9791 35.32C97.1951 35.288 98.3471 34.92 99.4351 34.216C100.555 33.48 101.451 32.616 102.123 31.624V19.288C102.123 18.52 102.139 17.864 102.171 17.32C102.203 16.744 102.267 16.184 102.363 15.64C101.787 15.672 101.211 15.704 100.635 15.736C100.059 15.736 99.4831 15.752 98.9071 15.784V13.816H100.395C101.771 13.816 102.763 13.688 103.371 13.432C104.011 13.144 104.507 12.84 104.859 12.52H106.251L106.203 30.664C106.203 31.176 106.187 31.896 106.155 32.824C106.123 33.752 106.075 34.536 106.011 35.176C106.587 35.144 107.163 35.112 107.739 35.08C108.315 35.048 108.891 35.016 109.467 34.984V37H102.603C102.507 36.456 102.427 35.944 102.363 35.464C102.331 34.984 102.299 34.536 102.267 34.12C101.275 35.112 100.075 35.976 98.6671 36.712C97.2591 37.416 95.8511 37.768 94.4431 37.768ZM124.86 37.768C122.62 37.768 120.588 37.256 118.764 36.232C116.94 35.176 115.484 33.736 114.396 31.912C113.34 30.056 112.812 27.944 112.812 25.576C112.812 23.048 113.34 20.776 114.396 18.76C115.452 16.744 116.892 15.16 118.716 14.008C120.54 12.824 122.588 12.232 124.86 12.232C127.1 12.232 129.132 12.776 130.956 13.864C132.78 14.92 134.236 16.36 135.324 18.184C136.412 20.008 136.956 22.088 136.956 24.424C136.956 26.888 136.412 29.144 135.324 31.192C134.268 33.208 132.828 34.808 131.004 35.992C129.18 37.176 127.132 37.768 124.86 37.768ZM125.244 35.848C126.94 35.848 128.284 35.368 129.276 34.408C130.268 33.448 130.972 32.2 131.388 30.664C131.836 29.128 132.06 27.512 132.06 25.816C132.06 24.376 131.916 22.968 131.628 21.592C131.372 20.184 130.956 18.92 130.38 17.8C129.804 16.648 129.052 15.736 128.124 15.064C127.228 14.392 126.14 14.056 124.86 14.056C123.196 14.056 121.836 14.536 120.78 15.496C119.724 16.456 118.94 17.704 118.428 19.24C117.948 20.776 117.708 22.424 117.708 24.184C117.708 26.168 117.98 28.056 118.524 29.848C119.068 31.608 119.9 33.048 121.02 34.168C122.14 35.288 123.548 35.848 125.244 35.848ZM141.034 35.56C142.026 35.56 142.714 35.32 143.098 34.84C143.482 34.328 143.706 33.64 143.77 32.776C143.834 31.88 143.866 30.856 143.866 29.704V18.76C143.866 18.248 143.866 17.736 143.866 17.224C143.898 16.712 143.962 16.184 144.058 15.64C143.482 15.672 142.906 15.704 142.33 15.736C141.786 15.736 141.226 15.752 140.65 15.784V13.816H142.138C143.514 13.816 144.458 13.688 144.97 13.432C145.514 13.144 145.962 12.84 146.314 12.52H147.706C147.77 13.032 147.818 13.672 147.85 14.44C147.882 15.176 147.914 16.12 147.946 17.272C148.426 16.472 149.082 15.688 149.914 14.92C150.746 14.152 151.674 13.512 152.698 13C153.754 12.488 154.858 12.232 156.01 12.232C156.906 12.232 157.69 12.472 158.362 12.952C159.034 13.432 159.37 14.2 159.37 15.256C159.37 15.512 159.29 15.832 159.13 16.216C158.97 16.568 158.714 16.888 158.362 17.176C158.01 17.432 157.546 17.56 156.97 17.56C156.266 17.528 155.706 17.256 155.29 16.744C154.874 16.2 154.714 15.576 154.81 14.872C154.01 14.84 153.178 15.048 152.314 15.496C151.482 15.944 150.698 16.568 149.962 17.368C149.226 18.136 148.57 19.048 147.994 20.104L148.042 31.912C148.042 32.552 148.026 33.128 147.994 33.64C147.994 34.12 147.946 34.632 147.85 35.176C148.362 35.144 148.858 35.128 149.338 35.128C149.85 35.096 150.362 35.064 150.874 35.032V37H141.034V35.56ZM161.8 35.56C162.792 35.56 163.48 35.32 163.864 34.84C164.248 34.328 164.472 33.64 164.536 32.776C164.6 31.88 164.632 30.856 164.632 29.704V18.76C164.632 18.248 164.648 17.768 164.68 17.32C164.712 16.84 164.76 16.28 164.824 15.64C164.248 15.672 163.672 15.704 163.096 15.736C162.552 15.768 161.992 15.8 161.416 15.832V13.816C162.824 13.816 163.912 13.752 164.68 13.624C165.448 13.496 166.024 13.336 166.408 13.144C166.824 12.952 167.144 12.744 167.368 12.52H168.76V31.912C168.76 32.552 168.744 33.128 168.712 33.64C168.712 34.12 168.664 34.632 168.568 35.176C169.08 35.144 169.576 35.128 170.056 35.128C170.568 35.096 171.08 35.064 171.592 35.032V37H161.8V35.56ZM166.456 7.768C165.784 7.768 165.192 7.496 164.68 6.952C164.168 6.408 163.912 5.736 163.912 4.936C163.912 4.136 164.168 3.464 164.68 2.92C165.224 2.344 165.832 2.056 166.504 2.056C167.24 2.056 167.848 2.344 168.328 2.92C168.84 3.464 169.096 4.136 169.096 4.936C169.096 5.736 168.824 6.408 168.28 6.952C167.768 7.496 167.16 7.768 166.456 7.768ZM179.044 37.768C178.308 37.768 177.652 37.48 177.076 36.904C176.532 36.296 176.26 35.56 176.26 34.696C176.26 33.832 176.548 33.096 177.124 32.488C177.7 31.88 178.356 31.576 179.092 31.576C179.892 31.576 180.548 31.88 181.06 32.488C181.604 33.096 181.876 33.832 181.876 34.696C181.876 35.56 181.588 36.296 181.012 36.904C180.436 37.48 179.78 37.768 179.044 37.768Z"
//       />
//     </svg>
//   )
// }
